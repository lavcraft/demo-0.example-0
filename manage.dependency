#!/bin/bash

FIX_DEPS_FILE=./dependencies.fix

case "$1" in
  fixed)
while read -r dependency; do
    git submodule update --init
    KEY=`echo $dependency | cut -d':' -f1`
    BRANCH=`echo $dependency | cut -d':' -f2`
    VALUE=`echo $dependency | cut -d':' -f3`
    printf "dependency %s version %s.\n" "$KEY" "$VALUE"
    pushd $KEY
    if [ "last" = "$VALUE" ];then
        echo "pulling last commit"
            git pull origin $BRANCH
    else
        echo "use version $VALUE"
        git fetch origin $BRANCH
        git checkout $VALUE
    fi
    popd
    echo -n "$KEY:" >> ./$FIX_DEPS_FILE
    current_dep_version=`git submodule status $KEY | grep -E -o  "[0-9a-f]{40}"`
    echo "use sha $current_dep_version for dependency - $KEY"
    echo $current_dep_version >> ./$FIX_DEPS_FILE
done < ./dependencies.fix
  ;;
  *)
cat /dev/null > $FIX_DEPS_FILE

git submodule update --init
while read -r dependency; do
    KEY=`echo $dependency | cut -d':' -f1`
    BRANCH=`echo $dependency | cut -d':' -f2`
    VALUE=`echo $dependency | cut -d':' -f3`
    printf "dependency %s version:%s and branch:%s.\n" "$KEY" "$VALUE" "$BRANCH"
    pushd $KEY
    if [ "last" = "$VALUE" ];then
        echo "pulling last commit"
        git checkout $BRANCH 
        git pull origin $BRANCH
    else
        echo "use version $VALUE"
    	git checkout $VALUE
	git pull origin $BRANCH
    fi
    SUBMODULE_BRANCH=`git branch | cut -d ' ' -f2`
    popd
    echo -n "$KEY:" >> ./$FIX_DEPS_FILE
    current_dep_version=`git submodule status $KEY | grep -E -o  "[0-9a-f]{40}"`
    echo "use sha $current_dep_version for dependency - $KEY"
    echo -n $SUBMODULE_BRANCH >> ./$FIX_DEPS_FILE
    echo -n ":" >> ./$FIX_DEPS_FILE
    echo $current_dep_version >> ./$FIX_DEPS_FILE
done < ./dependencies
;;

esac
